name: Build and Release MyCalc

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        runtime: [win-x64, linux-x64, osx-x64]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'
        
    - name: Restore dependencies
      run: dotnet restore
      
    - name: Build solution
      run: dotnet build --no-restore --configuration Release
      
    - name: Run tests
      run: dotnet test --no-build --configuration Release --verbosity normal
      
    - name: Publish CLI application
      run: dotnet publish MyCalcCli/MyCalcCli.csproj --configuration Release --output ./publish-${{ matrix.runtime }} --no-build --self-contained true --runtime ${{ matrix.runtime }}
      
    - name: Create release artifacts
      run: |
        # Create release directory
        mkdir -p ./release-${{ matrix.runtime }}
        
        # Determine executable name based on runtime
        if [[ "${{ matrix.runtime }}" == win-* ]]; then
          EXE_NAME="MyCalcCli.exe"
          SCRIPT_EXT=".ps1"
          SCRIPT_CONTENT="# MyCalc - .NET Calculator
        Write-Host \"Starting MyCalc Calculator...\" -ForegroundColor Green
        Write-Host \"\"
        .\MyCalcCli.exe"
        else
          EXE_NAME="MyCalcCli"
          SCRIPT_EXT=".sh"
          SCRIPT_CONTENT="#!/bin/bash
        # MyCalc - .NET Calculator
        echo \"Starting MyCalc Calculator...\"
        echo \"\"
        ./MyCalcCli"
        fi
        
        # Copy essential runtime files
        cp ./publish-${{ matrix.runtime }}/$EXE_NAME ./release-${{ matrix.runtime }}/
        cp ./publish-${{ matrix.runtime }}/MyCalcCore.dll ./release-${{ matrix.runtime }}/
        cp ./publish-${{ matrix.runtime }}/Spectre.Console.dll ./release-${{ matrix.runtime }}/
        
        # Copy documentation
        cp ./README.md ./release-${{ matrix.runtime }}/
        
        # Create platform-specific run script
        echo "$SCRIPT_CONTENT" > ./release-${{ matrix.runtime }}/Start-MyCalc$SCRIPT_EXT
        
        # Make scripts executable on Unix platforms
        if [[ "${{ matrix.runtime }}" != win-* ]]; then
          chmod +x ./release-${{ matrix.runtime }}/MyCalcCli
          chmod +x ./release-${{ matrix.runtime }}/Start-MyCalc.sh
        fi
        
    - name: Archive release artifacts
      run: |
        cd ./release-${{ matrix.runtime }}
        if [[ "${{ matrix.runtime }}" == win-* ]]; then
          # Use PowerShell on Windows-compatible systems, but we're on Linux so use zip
          zip -r ../MyCalc-${{ matrix.runtime }}.zip .
        else
          tar -czf ../MyCalc-${{ matrix.runtime }}.tar.gz .
        fi
        cd ..
        
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: MyCalc-${{ matrix.runtime }}
        path: |
          ./MyCalc-${{ matrix.runtime }}.zip
          ./MyCalc-${{ matrix.runtime }}.tar.gz
        retention-days: 90
